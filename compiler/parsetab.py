
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDEQUAL ARROW AUTO BREAK CASE CHAR CHAR_CONST COLON COMMA CONDOP CONST CONTINUE DEFAULT DIVEQUAL DIVIDE DO DOUBLE ELLIPSIS ELSE ENUM EQ EQUALS EXTERN FLOAT FLOAT_CONST FOR GE GOTO GT ID IF INT INT_CONST LAND LBRACE LBRACKET LE LNOT LONG LOR LPAREN LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS MODEQUAL MODULO NE NOT OR OREQUAL PERIOD PLUS PLUSEQUAL PLUSPLUS RBRACE RBRACKET REGISTER RETURN RPAREN RSHIFT RSHIFTEQUAL SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SWITCH TIMES TIMESEQUAL TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR XOREQUAL\ntranslation_unit : external_declaration\n                | translation_unit external_declaration\n\nexternal_declaration : function_definition\n                    | declaration\n\nfunction_definition : declaration_specifiers declarator compound_statement\n                   | declarator compound_statement\n\ndeclaration : declaration_specifiers init_declarator_list SEMI\n            | declaration_specifiers SEMI\n\ndeclaration_specifiers : storage_class_specifier\n                       | storage_class_specifier declaration_specifiers\n                       | type_specifier\n                       | type_specifier declaration_specifiers\n                       | type_qualifier\n                       | type_qualifier declaration_specifiers\n\nstorage_class_specifier : AUTO\n                        | REGISTER\n                        | STATIC\n                        | EXTERN\n                        | TYPEDEF\n\ntype_specifier : VOID\n               | CHAR\n               | SHORT\n               | INT\n               | LONG\n               | FLOAT\n               | DOUBLE\n               | SIGNED\n               | UNSIGNED\n               | struct_or_union_specifier\n               | enum_specifier\n               | typedef_name\n\nstruct_or_union_specifier : struct_or_union ID LBRACE struct_declaration_list RBRACE\n                          | struct_or_union LBRACE struct_declaration_list RBRACE\n                          | struct_or_union ID\n\nstruct_or_union : STRUCT\n                | UNION\n\nstruct_declaration_list : struct_declaration\n                        | struct_declaration_list struct_declaration\n\nstruct_declaration : specifier_qualifier_list struct_declarator_list SEMI\n\nspecifier_qualifier_list : type_specifier\n                         | type_specifier specifier_qualifier_list\n                         | type_qualifier\n                         | type_qualifier specifier_qualifier_list\n\nstruct_declarator_list : struct_declarator\n                       | struct_declarator_list COMMA struct_declarator\n\nstruct_declarator : declarator\n                  | COLON constant_expression\n                  | declarator COLON constant_expression\n\nenum_specifier : ENUM ID LBRACE enumerator_list RBRACE\n               | ENUM LBRACE enumerator_list RBRACE\n               | ENUM ID\n\nenumerator_list : enumerator\n                | enumerator_list COMMA enumerator\n\nenumerator : ID\n           | ID EQUALS constant_expression\n\ntype_qualifier : CONST\n               | VOLATILE\n\ndeclarator : pointer direct_declarator\n           | direct_declarator\n\ndirect_declarator : ID\n                  | LPAREN declarator RPAREN\n                  | direct_declarator LBRACKET constant_expression RBRACKET\n                  | direct_declarator LBRACKET RBRACKET\n                  | direct_declarator LPAREN parameter_type_list RPAREN\n                  | direct_declarator LPAREN identifier_list RPAREN\n                  | direct_declarator LPAREN RPAREN\n\npointer : TIMES\n        | TIMES type_qualifier_list\n        | TIMES pointer\n        | TIMES type_qualifier_list pointer\n\ntype_qualifier_list : type_qualifier\n                    | type_qualifier_list type_qualifier\n\nparameter_type_list : parameter_list\n                    | parameter_list COMMA ELLIPSIS\n\nparameter_list : parameter_declaration\n               | parameter_list COMMA parameter_declaration\n\nparameter_declaration : declaration_specifiers declarator\n                      | declaration_specifiers abstract_declarator\n                      | declaration_specifiers\n\nidentifier_list : ID\n                | identifier_list COMMA ID\n\ninitializer : assignment_expression\n            | LBRACE initializer_list RBRACE\n            | LBRACE initializer_list COMMA RBRACE\n\ninitializer_list : initializer\n                 | initializer_list COMMA initializer\n\ntype_name : specifier_qualifier_list\n          | specifier_qualifier_list abstract_declarator\n\nabstract_declarator : pointer\n                    | direct_abstract_declarator\n                    | pointer direct_abstract_declarator\n\ndirect_abstract_declarator : LPAREN abstract_declarator RPAREN\n                           | LBRACKET RBRACKET\n                           | LBRACKET constant_expression RBRACKET\n                           | direct_abstract_declarator LBRACKET RBRACKET\n                           | direct_abstract_declarator LBRACKET constant_expression RBRACKET\n                           | LPAREN RPAREN\n                           | LPAREN parameter_type_list RPAREN\n                           | direct_abstract_declarator LPAREN RPAREN\n                           | direct_abstract_declarator LPAREN parameter_type_list RPAREN\n\ntypedef_name : ID\n\ninit_declarator_list : init_declarator\n                     | init_declarator_list COMMA init_declarator\n\ninit_declarator : declarator\n                | declarator EQUALS initializer\n\ncompound_statement : LBRACE RBRACE\n                   | LBRACE statement_list RBRACE\n                   | LBRACE declaration_list RBRACE\n                   | LBRACE declaration_list statement_list RBRACE\n\ndeclaration_list : declaration\n                 | declaration_list declaration\n\nstatement_list : statement\n               | statement_list statement\n\nstatement : labeled_statement\n          | compound_statement\n          | expression_statement\n          | selection_statement\n          | iteration_statement\n          | jump_statement\n\nlabeled_statement : ID COLON statement\n                  | CASE constant_expression COLON statement\n                  | DEFAULT COLON statement\n\nexpression_statement : SEMI\n                     | expression SEMI\n\nselection_statement : IF LPAREN expression RPAREN statement\n                    | IF LPAREN expression RPAREN statement ELSE statement\n                    | SWITCH LPAREN expression RPAREN statement\n\niteration_statement : WHILE LPAREN expression RPAREN statement\n                    | DO statement WHILE LPAREN expression RPAREN SEMI\n                    | FOR LPAREN expression_statement expression_statement RPAREN statement\n                    | FOR LPAREN expression_statement expression_statement expression RPAREN statement\n\njump_statement : GOTO ID SEMI\n               | CONTINUE SEMI\n               | BREAK SEMI\n               | RETURN SEMI\n               | RETURN expression SEMI\n\nexpression : assignment_expression\n           | expression COMMA assignment_expression\n\nassignment_expression : conditional_expression\n                      | unary_expression assignment_operator assignment_expression\n\nassignment_operator : EQUALS\n                    | TIMESEQUAL\n                    | DIVEQUAL\n                    | MODEQUAL\n                    | PLUSEQUAL\n                    | MINUSEQUAL\n                    | LSHIFTEQUAL\n                    | RSHIFTEQUAL\n                    | ANDEQUAL\n                    | XOREQUAL\n                    | OREQUAL\n\nconditional_expression : logical_or_expression\n                       | logical_or_expression CONDOP expression COLON conditional_expression\n\nconstant_expression : conditional_expression\n\nlogical_or_expression : logical_and_expression\n                      | logical_or_expression LOR logical_and_expression\n\nlogical_and_expression : inclusive_or_expression\n                       | logical_and_expression LAND inclusive_or_expression\n\ninclusive_or_expression : exclusive_or_expression\n                        | inclusive_or_expression OR exclusive_or_expression\n\nexclusive_or_expression : and_expression\n                        | exclusive_or_expression XOR and_expression\n\nand_expression : equality_expression\n               | and_expression AND equality_expression\n\nequality_expression : relational_expression\n                    | equality_expression EQ relational_expression\n                    | equality_expression NE relational_expression\n\nrelational_expression : shift_expression\n                      | relational_expression LT shift_expression\n                      | relational_expression GT shift_expression\n                      | relational_expression LE shift_expression\n                      | relational_expression GE shift_expression\n\nshift_expression : additive_expression\n                 | shift_expression LSHIFT additive_expression\n                 | shift_expression RSHIFT additive_expression\n\nadditive_expression : multiplicative_expression\n                    | additive_expression PLUS multiplicative_expression\n                    | additive_expression MINUS multiplicative_expression\n\nmultiplicative_expression : cast_expression\n                          | multiplicative_expression TIMES cast_expression\n                          | multiplicative_expression DIVIDE cast_expression\n                          | multiplicative_expression MODULO cast_expression\n\ncast_expression : unary_expression\n                | LPAREN type_name RPAREN cast_expression\n\nunary_expression : postfix_expression\n                 | PLUSPLUS unary_expression\n                 | MINUSMINUS unary_expression\n                 | unary_operator cast_expression\n                 | SIZEOF unary_expression\n                 | SIZEOF LPAREN type_name RPAREN\n\nunary_operator : AND\n               | TIMES\n               | PLUS\n               | MINUS\n               | NOT\n               | LNOT\n\npostfix_expression : primary_expression\n                   | postfix_expression LBRACKET expression RBRACKET\n                   | postfix_expression LPAREN RPAREN\n                   | postfix_expression LPAREN argument_expression_list RPAREN\n                   | postfix_expression PERIOD ID\n                   | postfix_expression ARROW ID\n                   | postfix_expression PLUSPLUS\n                   | postfix_expression MINUSMINUS\n\nprimary_expression : ID\n                   | constant\n                   | STRING_LITERAL\n                   | LPAREN expression RPAREN\n\nargument_expression_list : assignment_expression\n                         | argument_expression_list COMMA assignment_expression\n\nconstant : INT_CONST\n         | CHAR_CONST\n         | FLOAT_CONST\n'
    
_lr_action_items = {'AUTO':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,59,61,63,65,67,69,78,133,154,157,159,226,231,234,243,248,258,297,303,308,],[12,12,-1,-3,-4,12,12,12,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,12,-101,12,-34,-51,-5,-7,-106,12,-110,-101,-101,-107,-108,-111,12,12,-33,-50,-109,12,12,-32,-49,]),'REGISTER':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,59,61,63,65,67,69,78,133,154,157,159,226,231,234,243,248,258,297,303,308,],[13,13,-1,-3,-4,13,13,13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,13,-101,13,-34,-51,-5,-7,-106,13,-110,-101,-101,-107,-108,-111,13,13,-33,-50,-109,13,13,-32,-49,]),'STATIC':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,59,61,63,65,67,69,78,133,154,157,159,226,231,234,243,248,258,297,303,308,],[14,14,-1,-3,-4,14,14,14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,14,-101,14,-34,-51,-5,-7,-106,14,-110,-101,-101,-107,-108,-111,14,14,-33,-50,-109,14,14,-32,-49,]),'EXTERN':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,59,61,63,65,67,69,78,133,154,157,159,226,231,234,243,248,258,297,303,308,],[15,15,-1,-3,-4,15,15,15,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,15,-101,15,-34,-51,-5,-7,-106,15,-110,-101,-101,-107,-108,-111,15,15,-33,-50,-109,15,15,-32,-49,]),'TYPEDEF':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,59,61,63,65,67,69,78,133,154,157,159,226,231,234,243,248,258,297,303,308,],[16,16,-1,-3,-4,16,16,16,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,16,-101,16,-34,-51,-5,-7,-106,16,-110,-101,-101,-107,-108,-111,16,16,-33,-50,-109,16,16,-32,-49,]),'VOID':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[17,17,-1,-3,-4,17,17,17,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,17,-101,17,-34,17,-51,-5,-7,-106,17,-110,-101,17,17,-101,17,17,-37,17,17,-107,-108,-111,-101,17,17,17,17,-33,-38,-50,-109,17,17,-32,-39,-49,]),'CHAR':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[18,18,-1,-3,-4,18,18,18,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,18,-101,18,-34,18,-51,-5,-7,-106,18,-110,-101,18,18,-101,18,18,-37,18,18,-107,-108,-111,-101,18,18,18,18,-33,-38,-50,-109,18,18,-32,-39,-49,]),'SHORT':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[19,19,-1,-3,-4,19,19,19,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,19,-101,19,-34,19,-51,-5,-7,-106,19,-110,-101,19,19,-101,19,19,-37,19,19,-107,-108,-111,-101,19,19,19,19,-33,-38,-50,-109,19,19,-32,-39,-49,]),'INT':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[20,20,-1,-3,-4,20,20,20,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,20,-101,20,-34,20,-51,-5,-7,-106,20,-110,-101,20,20,-101,20,20,-37,20,20,-107,-108,-111,-101,20,20,20,20,-33,-38,-50,-109,20,20,-32,-39,-49,]),'LONG':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[21,21,-1,-3,-4,21,21,21,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,21,-101,21,-34,21,-51,-5,-7,-106,21,-110,-101,21,21,-101,21,21,-37,21,21,-107,-108,-111,-101,21,21,21,21,-33,-38,-50,-109,21,21,-32,-39,-49,]),'FLOAT':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[22,22,-1,-3,-4,22,22,22,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,22,-101,22,-34,22,-51,-5,-7,-106,22,-110,-101,22,22,-101,22,22,-37,22,22,-107,-108,-111,-101,22,22,22,22,-33,-38,-50,-109,22,22,-32,-39,-49,]),'DOUBLE':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[23,23,-1,-3,-4,23,23,23,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,23,-101,23,-34,23,-51,-5,-7,-106,23,-110,-101,23,23,-101,23,23,-37,23,23,-107,-108,-111,-101,23,23,23,23,-33,-38,-50,-109,23,23,-32,-39,-49,]),'SIGNED':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[24,24,-1,-3,-4,24,24,24,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,24,-101,24,-34,24,-51,-5,-7,-106,24,-110,-101,24,24,-101,24,24,-37,24,24,-107,-108,-111,-101,24,24,24,24,-33,-38,-50,-109,24,24,-32,-39,-49,]),'UNSIGNED':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[25,25,-1,-3,-4,25,25,25,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,25,-101,25,-34,25,-51,-5,-7,-106,25,-110,-101,25,25,-101,25,25,-37,25,25,-107,-108,-111,-101,25,25,25,25,-33,-38,-50,-109,25,25,-32,-39,-49,]),'CONST':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,41,44,45,47,52,53,55,57,58,59,61,63,65,67,69,78,83,127,133,137,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[29,29,-1,-3,-4,29,29,29,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,29,-101,-2,-8,-6,29,-101,29,29,-71,-34,29,-51,-5,-7,-106,29,-110,-101,29,29,-101,-72,29,29,-37,29,29,-107,-108,-111,-101,29,29,29,29,-33,-38,-50,-109,29,29,-32,-39,-49,]),'VOLATILE':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,41,44,45,47,52,53,55,57,58,59,61,63,65,67,69,78,83,127,133,137,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[30,30,-1,-3,-4,30,30,30,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,30,-101,-2,-8,-6,30,-101,30,30,-71,-34,30,-51,-5,-7,-106,30,-110,-101,30,30,-101,-72,30,30,-37,30,30,-107,-108,-111,-101,30,30,30,30,-33,-38,-50,-109,30,30,-32,-39,-49,]),'TIMES':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,41,44,45,46,47,48,49,51,53,55,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,91,94,96,97,98,99,100,101,103,104,105,106,107,108,109,111,112,114,115,116,122,126,127,128,133,135,137,142,143,144,151,154,155,156,157,158,159,160,162,163,164,165,168,169,170,171,173,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,231,232,234,239,240,241,243,245,248,249,250,251,254,255,258,262,263,264,269,272,273,287,288,289,290,291,296,303,305,306,308,312,313,314,315,316,317,318,319,320,321,322,323,324,336,337,338,340,346,348,349,350,351,352,],[31,31,-1,-3,-4,31,-9,-11,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,31,-101,31,-2,-8,-6,105,-10,-101,-12,-14,105,31,-71,-34,-51,-5,105,-7,31,-106,105,105,-112,-110,-114,-115,-116,-117,-118,-119,31,-123,-101,105,105,105,105,-183,-185,105,105,105,-179,105,-197,-191,-192,-193,-194,-195,-196,-206,-207,-211,-212,-213,219,-183,105,-205,-101,31,-72,31,-40,-42,105,-107,-113,-205,-108,105,-111,105,105,-124,105,105,31,-101,105,105,105,-133,-134,-135,105,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,105,105,105,105,-203,-204,-186,105,-187,-188,-189,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,31,105,-33,105,-41,-43,-50,105,-109,-120,105,-122,-208,105,31,105,-132,-136,-199,-201,-202,219,219,-180,-181,-182,105,-32,31,105,-49,105,-121,105,-184,105,105,105,105,105,-198,-200,105,-190,-125,-127,-128,105,105,-130,105,-126,-129,-131,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,88,91,97,98,99,101,104,105,106,107,108,109,127,133,135,136,137,139,140,141,142,143,144,145,151,154,155,157,158,159,160,162,163,164,165,169,170,171,173,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,226,229,231,232,233,234,235,239,240,241,243,244,245,248,249,250,251,255,258,262,263,264,296,297,303,304,305,306,308,312,313,314,316,317,318,319,320,323,336,337,338,340,346,348,349,350,351,352,],[32,32,-1,-3,-4,43,47,47,47,43,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-67,-101,43,57,59,-35,-36,-2,-8,-6,78,-10,-101,-12,-14,128,133,-68,-69,-71,-34,47,-51,148,-5,128,-7,43,-106,156,78,-112,-110,-114,-115,-116,-117,-118,-119,43,-123,-101,128,169,156,174,128,128,128,128,128,-191,-192,-193,-194,-195,-196,169,-101,43,-70,-72,47,47,-37,43,47,47,148,128,-107,-113,-108,156,-111,156,156,-124,128,128,-101,128,128,128,-133,-134,-135,128,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,128,128,128,128,272,273,128,169,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,292,47,43,32,128,47,-33,-38,128,-41,-43,-50,148,128,-109,-120,156,-122,128,47,128,-132,-136,128,47,-32,-39,43,128,-49,128,-121,156,156,156,128,128,128,128,-125,-127,-128,156,156,-130,156,-126,-129,-131,]),'LPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,41,43,44,45,46,47,48,49,50,51,53,54,55,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,87,91,96,97,98,99,101,103,104,105,106,107,108,109,111,112,114,115,116,124,127,128,130,133,135,136,137,138,142,143,144,151,154,155,156,157,158,159,160,162,163,164,165,168,169,170,171,173,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,234,239,240,241,243,245,248,249,250,251,254,255,257,258,261,262,263,264,269,272,273,295,296,298,301,303,305,306,308,312,313,314,316,317,318,319,320,321,322,323,325,327,329,330,331,336,337,338,340,344,345,346,348,349,350,351,352,],[33,33,-1,-3,-4,33,-9,-11,-13,33,52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-67,-60,33,-2,-8,-60,-6,83,-10,-101,-12,-14,52,127,-68,-69,-71,-34,-51,-5,83,-7,33,-106,83,83,-112,-110,-114,-115,-116,-117,-118,-119,33,-123,-101,127,165,83,170,171,83,173,83,194,200,200,127,204,-197,-191,-192,-193,-194,-195,-196,-206,-207,-211,-212,-213,-63,83,-205,-66,-101,231,-70,-72,-61,33,-40,-42,83,-107,-113,-205,-108,83,-111,83,83,-124,83,83,258,-101,83,83,83,-133,-134,-135,83,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,83,127,83,83,-203,-204,83,83,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-62,-64,-65,231,297,231,127,-33,127,-41,-43,-50,127,-109,-120,83,-122,-208,127,258,258,318,83,-132,-136,-199,-201,-202,297,127,-97,-93,-32,33,127,-49,83,-121,83,83,83,83,83,127,-198,-200,83,-95,-99,-92,-98,-94,-125,-127,-128,83,-96,-100,83,-130,83,-126,-129,-131,]),'ENUM':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[35,35,-1,-3,-4,35,35,35,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,35,-101,35,-34,35,-51,-5,-7,-106,35,-110,-101,35,35,-101,35,35,-37,35,35,-107,-108,-111,-101,35,35,35,35,-33,-38,-50,-109,35,35,-32,-39,-49,]),'STRUCT':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[36,36,-1,-3,-4,36,36,36,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,36,-101,36,-34,36,-51,-5,-7,-106,36,-110,-101,36,36,-101,36,36,-37,36,36,-107,-108,-111,-101,36,36,36,36,-33,-38,-50,-109,36,36,-32,-39,-49,]),'UNION':([0,1,2,3,4,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,41,44,45,47,52,57,58,59,61,63,65,67,69,78,83,127,133,139,140,141,143,144,154,157,159,169,204,226,231,233,234,235,243,248,258,297,303,304,308,],[37,37,-1,-3,-4,37,37,37,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-56,-57,-101,-2,-8,-6,37,-101,37,-34,37,-51,-5,-7,-106,37,-110,-101,37,37,-101,37,37,-37,37,37,-107,-108,-111,-101,37,37,37,37,-33,-38,-50,-109,37,37,-32,-39,-49,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,38,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,45,67,],[4,4,69,159,]),'declaration_specifiers':([0,1,7,8,9,45,52,67,226,231,258,297,],[5,5,46,48,49,76,135,76,135,135,135,135,]),'declarator':([0,1,5,33,64,76,135,142,231,305,],[6,6,39,56,153,153,227,238,56,238,]),'storage_class_specifier':([0,1,7,8,9,45,52,67,226,231,258,297,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'type_specifier':([0,1,7,8,9,45,52,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[8,8,8,8,8,8,8,143,8,143,143,143,143,143,143,143,8,8,143,8,8,]),'type_qualifier':([0,1,7,8,9,31,45,52,53,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[9,9,9,9,9,55,9,9,137,144,9,144,144,144,144,144,144,144,9,9,144,9,9,]),'pointer':([0,1,5,31,33,53,64,76,135,142,168,231,258,305,],[10,10,10,54,10,136,10,10,229,10,257,229,257,10,]),'direct_declarator':([0,1,5,10,33,64,76,135,142,229,231,305,],[11,11,11,50,11,11,11,11,11,50,11,11,]),'struct_or_union_specifier':([0,1,7,8,9,45,52,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'enum_specifier':([0,1,7,8,9,45,52,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'typedef_name':([0,1,7,8,9,45,52,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,1,7,8,9,45,52,58,67,83,127,139,140,143,144,204,226,231,233,258,297,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_declarator_list':([5,76,],[40,40,]),'init_declarator':([5,64,76,],[42,152,42,]),'compound_statement':([6,39,45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[44,61,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'type_qualifier_list':([31,],[53,]),'statement_list':([45,67,],[66,158,]),'declaration_list':([45,],[67,]),'statement':([45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[68,155,68,172,155,249,251,313,336,337,338,348,350,352,]),'labeled_statement':([45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expression_statement':([45,66,67,86,158,160,162,173,250,262,314,316,317,340,346,349,],[72,72,72,72,72,72,72,262,72,319,72,72,72,72,72,72,]),'selection_statement':([45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'iteration_statement':([45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'jump_statement':([45,66,67,86,158,160,162,250,314,316,317,340,346,349,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expression':([45,66,67,83,86,91,127,158,160,162,165,170,171,173,191,193,200,204,250,262,314,316,317,318,319,340,346,349,],[81,81,81,166,81,178,166,81,81,81,253,259,260,81,266,268,166,166,81,81,81,81,81,339,341,81,81,81,]),'assignment_expression':([45,62,66,67,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,193,194,200,204,250,262,312,314,316,317,318,319,323,340,346,349,],[92,150,92,92,92,92,92,92,150,92,92,92,252,92,92,92,92,265,92,92,271,92,92,92,92,150,92,92,92,92,92,343,92,92,92,]),'conditional_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,193,194,200,204,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[93,125,93,93,93,125,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,125,125,125,93,93,125,125,93,93,93,93,93,93,342,93,93,93,93,]),'unary_expression':([45,51,62,66,67,79,83,86,91,97,98,99,101,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[94,126,94,94,94,126,94,94,94,199,201,126,203,94,94,94,94,94,94,94,94,94,94,94,94,126,94,94,94,94,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,94,126,94,126,126,94,94,94,94,94,94,126,94,94,94,94,]),'logical_or_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,193,194,200,204,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'postfix_expression':([45,51,62,66,67,79,83,86,91,97,98,99,101,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'unary_operator':([45,51,62,66,67,79,83,86,91,97,98,99,101,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cast_expression':([45,51,62,66,67,79,83,86,91,99,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[100,100,100,100,100,100,100,100,100,202,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,289,290,291,100,100,100,100,315,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'logical_and_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,267,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'primary_expression':([45,51,62,66,67,79,83,86,91,97,98,99,101,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'inclusive_or_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,275,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'constant':([45,51,62,66,67,79,83,86,91,97,98,99,101,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,239,245,250,255,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'exclusive_or_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,276,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'and_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,277,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'equality_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,278,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'relational_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,279,280,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'shift_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,281,282,283,284,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'additive_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,285,286,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'multiplicative_expression':([45,51,62,66,67,79,83,86,91,127,151,158,160,162,164,165,170,171,173,179,191,192,193,194,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,232,239,245,250,262,296,306,312,314,316,317,318,319,320,323,340,346,349,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,287,288,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'constant_expression':([51,79,232,239,245,296,306,],[123,161,302,307,310,326,333,]),'parameter_type_list':([52,231,258,297,],[129,300,300,328,]),'identifier_list':([52,],[131,]),'parameter_list':([52,231,258,297,],[132,132,132,132,]),'parameter_declaration':([52,226,231,258,297,],[134,294,134,134,134,]),'struct_declaration_list':([58,139,],[140,233,]),'struct_declaration':([58,139,140,233,],[141,141,235,235,]),'specifier_qualifier_list':([58,83,127,139,140,143,144,204,233,],[142,168,168,142,142,240,241,168,142,]),'enumerator_list':([60,145,],[146,242,]),'enumerator':([60,145,244,],[147,147,309,]),'initializer':([62,151,312,],[149,247,335,]),'type_name':([83,127,204,],[167,167,274,]),'assignment_operator':([94,],[179,]),'abstract_declarator':([135,168,231,258,],[228,256,299,299,]),'direct_abstract_declarator':([135,168,229,231,257,258,],[230,230,295,230,295,230,]),'struct_declarator_list':([142,],[236,]),'struct_declarator':([142,305,],[237,332,]),'initializer_list':([151,],[246,]),'argument_expression_list':([194,],[270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',42),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',43),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',53),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',54),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',60),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',61),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration','parser.py',70),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration','parser.py',71),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',80),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',81),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',82),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',83),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',84),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',85),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',94),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',95),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',96),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',97),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',98),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',104),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',105),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',106),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',107),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',108),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',109),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',110),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',111),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',112),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',113),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',114),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','parser.py',115),
  ('struct_or_union_specifier -> struct_or_union ID LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',124),
  ('struct_or_union_specifier -> struct_or_union LBRACE struct_declaration_list RBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',125),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',126),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',137),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',138),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',144),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',145),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration','parser.py',155),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',161),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',162),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',163),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',164),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',173),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',174),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',184),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',185),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',186),
  ('enum_specifier -> ENUM ID LBRACE enumerator_list RBRACE','enum_specifier',5,'p_enum_specifier','parser.py',197),
  ('enum_specifier -> ENUM LBRACE enumerator_list RBRACE','enum_specifier',4,'p_enum_specifier','parser.py',198),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier','parser.py',199),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',210),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser.py',211),
  ('enumerator -> ID','enumerator',1,'p_enumerator','parser.py',221),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','parser.py',222),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',231),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',232),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',238),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',239),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','parser.py',248),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',249),
  ('direct_declarator -> direct_declarator LBRACKET constant_expression RBRACKET','direct_declarator',4,'p_direct_declarator','parser.py',250),
  ('direct_declarator -> direct_declarator LBRACKET RBRACKET','direct_declarator',3,'p_direct_declarator','parser.py',251),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',252),
  ('direct_declarator -> direct_declarator LPAREN identifier_list RPAREN','direct_declarator',4,'p_direct_declarator','parser.py',253),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator','parser.py',254),
  ('pointer -> TIMES','pointer',1,'p_pointer','parser.py',269),
  ('pointer -> TIMES type_qualifier_list','pointer',2,'p_pointer','parser.py',270),
  ('pointer -> TIMES pointer','pointer',2,'p_pointer','parser.py',271),
  ('pointer -> TIMES type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',272),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',286),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',287),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',297),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',298),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',307),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',308),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',318),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',319),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',320),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','parser.py',329),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','parser.py',330),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',340),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','parser.py',341),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','parser.py',342),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',353),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',354),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',364),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',365),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',374),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',376),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',385),
  ('direct_abstract_declarator -> LBRACKET RBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',386),
  ('direct_abstract_declarator -> LBRACKET constant_expression RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',387),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',388),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET constant_expression RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',389),
  ('direct_abstract_declarator -> LPAREN RPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',390),
  ('direct_abstract_declarator -> LPAREN parameter_type_list RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',391),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',392),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',393),
  ('typedef_name -> ID','typedef_name',1,'p_typedef_name','parser.py',410),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',416),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',417),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',427),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','parser.py',428),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','parser.py',437),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','parser.py',438),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement','parser.py',439),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','parser.py',440),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',451),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',452),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',462),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',463),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',473),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',474),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',475),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',476),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',477),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',478),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',484),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',485),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',486),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','parser.py',497),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','parser.py',498),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',507),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',508),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','parser.py',509),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','parser.py',520),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement','parser.py',521),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement RPAREN statement','iteration_statement',6,'p_iteration_statement','parser.py',522),
  ('iteration_statement -> FOR LPAREN expression_statement expression_statement expression RPAREN statement','iteration_statement',7,'p_iteration_statement','parser.py',523),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement','parser.py',536),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement','parser.py',537),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','parser.py',538),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement','parser.py',539),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','parser.py',540),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',555),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',556),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',566),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',567),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',576),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',577),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',578),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',579),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',580),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',581),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',582),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',583),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','parser.py',584),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',585),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','parser.py',586),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',592),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',593),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',602),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',608),
  ('logical_or_expression -> logical_or_expression LOR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',609),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',618),
  ('logical_and_expression -> logical_and_expression LAND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',619),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',628),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',629),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',638),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',639),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',648),
  ('and_expression -> and_expression AND equality_expression','and_expression',3,'p_and_expression','parser.py',649),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',658),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',659),
  ('equality_expression -> equality_expression NE relational_expression','equality_expression',3,'p_equality_expression','parser.py',660),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',669),
  ('relational_expression -> relational_expression LT shift_expression','relational_expression',3,'p_relational_expression','parser.py',670),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression','parser.py',671),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression','parser.py',672),
  ('relational_expression -> relational_expression GE shift_expression','relational_expression',3,'p_relational_expression','parser.py',673),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',682),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',683),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','parser.py',684),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',693),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',694),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',695),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',704),
  ('multiplicative_expression -> multiplicative_expression TIMES cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',705),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',706),
  ('multiplicative_expression -> multiplicative_expression MODULO cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',707),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',716),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression','parser.py',717),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',726),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',727),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',728),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',729),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',730),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression','parser.py',731),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','parser.py',747),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','parser.py',748),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',749),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',750),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','parser.py',751),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','parser.py',752),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',758),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','parser.py',759),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','parser.py',760),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','parser.py',761),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression','parser.py',762),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression','parser.py',763),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression','parser.py',764),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression','parser.py',765),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','parser.py',784),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression','parser.py',785),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',786),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',787),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',800),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',801),
  ('constant -> INT_CONST','constant',1,'p_constant','parser.py',811),
  ('constant -> CHAR_CONST','constant',1,'p_constant','parser.py',812),
  ('constant -> FLOAT_CONST','constant',1,'p_constant','parser.py',813),
]
